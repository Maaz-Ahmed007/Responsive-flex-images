--- 
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	html {
		color-scheme: dark;
	}

	body {
		margin: 0;
		font-family: system-ui;
		font-size: 1.125rem;
		line-height: 1.6;
	}

	img {
		max-width: 100%;
		display: block;
	}

	.accordion * {
		margin: 0;
	}

	.flex-b {
		--_button-size: 3rem;
		--_panel-padding: 0.75rem;
		--_panel-gap: 1rem;

		flex-basis: calc((var(--_panel-padding) * 2) + var(--_button-size));

		transition: flex-basis 500ms;
	}

	.accordion_padding {
		padding: var(--_panel-padding);
		padding-right: calc(var(--_panel-padding) * 4);
	}

	.accordion_radius {
		border-radius: calc(((var(--_panel-padding) * 2) + var(--_button-size)) / 2);
	}

	.accordion-panel:has([aria-expanded="true"]) {
		flex-basis: clamp(15rem, 40vh, 20rem);
	}

	.accordion-content > p {
		transition: transform 500ms 250ms, opacity 500ms 250ms;
		margin-left: calc(var(--_panel-gap) + var(--_button-size));
	}

	.accordion-panel:has([aria-expanded="true"]) p {
		transform: translateY(0);
		opacity: 1;
	}

	.accordion-image {
		transition: filter 1000ms;
	}

	.accordion-panel:has([aria-expanded="true"]) .accordion-image {
		filter: brightness(0.5)
	}
</style>
